<template>
  <div id="scene" class="scene" :class="isSelection && 'scene--selection'" />
</template>

<script lang="ts">
// ...

// Types
import type { ISelf } from '@/models/modules';
import { computed } from 'vue';
// ...

export default defineComponent({
  name: 'Scene',

  setup() {
    const store = useStore(key);

    // Core

    let container: HTMLElement;

    let camera: PerspectiveCamera = new THREE.PerspectiveCamera();
    let listener: AudioListener = new THREE.AudioListener();

    let scene: Scene = new THREE.Scene();

    let renderer: WebGLRenderer = new THREE.WebGLRenderer({
      antialias: true,
    });

    // Store getters
    const isPause = computed(() => store.getters['layout/isPause']);

    // ...

    // ...

    // Modules
    let world = new World();

    // ...

    // Go!
    init = () => {
      // Core
      container = document.getElementById('scene') as HTMLElement;

      // ...

      // Modules
      // ...
      world.init(self);

      // First render
      // ...
      render();
    };

    // ...

    animate = () => {
      if (!isPause.value) {
        world.animate(self);

        render();
      }

      // ...

      requestAnimationFrame(animate);
    };


    render = () => {
      renderer.render(scene, camera);
      // console.log('Renderer info: ', renderer.info.memory.geometries, renderer.info.memory.textures, renderer.info.render);

      // ...
    };

    // This is self )
    let self: ISelf = {
      // Utils
      helper,
      assets,
      events,
      audio,

      // Core
      store,
      scene,
      listener,
      render,
    };

    // ...

    onMounted(() => {
      init();
      animate();

      // audio.toggle(isPause.value);
    });

    // ...
  },
});
</script>
